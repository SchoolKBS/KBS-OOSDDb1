<Page x:Class="CampingUI.MainPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:CampingUI"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Camping Administratie Applicatie">
    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#529341"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3d6d30"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#437835"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1Apply" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#C00C00"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#970900"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#A60A00"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1Cancel" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FBA70E"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#E3970C"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#DC920C"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1Edit" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <!-- First row with a fixed height of 70 -->
            <RowDefinition Height="60"/>
            <RowDefinition Height="100"/>
            <!-- Second row takes up the rest of the height -->
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Content in the first row -->
        <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Margin="25,25,25,0" Background="#11284D" Grid.RowSpan="2">
            <TextBlock FontSize="25" FontWeight="Bold" Foreground="white" Text="Plattegrond"></TextBlock>
        </Border>
        <Border Grid.Row="1" Margin="25,25,25,0" Padding="5" Background="#334A6E" CornerRadius="25">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition></ColumnDefinition>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0" Name="MapGridButtons" Margin="25, 0, 25, 0" HorizontalAlignment="Left">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Button Style="{DynamicResource ButtonStyle1Edit}" Height="45" Margin="0, 0, 10, 0" HorizontalAlignment="Center" Grid.Column="0" Padding="20, 0" Foreground="White" FontWeight="Bold" FontSize="16" Name="MakeAreaButton" Click="MakeMapComponentButton_Click">Gebied aanmaken</Button>
                    <Button Style="{DynamicResource ButtonStyle1Edit}" Height="45" Margin="10, 0, 10, 0" HorizontalAlignment="Center" Grid.Column="1" Padding="20, 0" Foreground="White" FontWeight="Bold" FontSize="16" Name="MakeStreetButton" Click="MakeMapComponentButton_Click">Straat aanmaken</Button>
                    <Button Style="{DynamicResource ButtonStyle1Edit}" Height="45" Margin="10, 0, 0, 0" HorizontalAlignment="Center" Grid.Column="2" Padding="20, 0" Foreground="White" FontWeight="Bold" FontSize="16" Name="MakePlaceButton" Click="MakeMapComponentButton_Click">Plaats aanmaken</Button>
                </Grid>
            </Grid>
        </Border>
        <!-- Content in the second row -->
        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <!-- First column, 30% of the screen width with a 25-margin on the right -->
                <ColumnDefinition Width="3*" MinWidth="0"/>

                <!-- Second column, 70% of the screen width with a 25-margin on the left -->
                <ColumnDefinition Width="7*" MinWidth="0"/>
            </Grid.ColumnDefinitions>

            <!-- Content in the first column -->
            <Border Grid.Column="0" Margin="25" Padding="15" Background="#334A6E" CornerRadius="25" Name="PlaceInfo">
                <Grid Visibility="Hidden"  Name="PlaceInfoGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <!-- Title of the place -->
                    <Grid Grid.Row="0" Name="PlaceRow0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="PlacePlaceIDLabel" Content="Plaatsnr: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBox TextChanged="TextBox_Changed" Name="PlacePlaceID" VerticalAlignment="Center" FontSize="14" Width="190" Height="40" BorderBrush="Transparent" HorizontalAlignment="Right" Grid.Column="2">
                        </TextBox>
                    </Grid>

                    <Grid Grid.Row="1" Name="PlaceRow1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="PlaceStreetLabel" Content="Straat: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                        <Border Name="PlaceStreetBorder" Grid.Column="1" BorderBrush="White" Height="40" Width="190" HorizontalAlignment="Right">
                            <ComboBox Name="PlaceStreetComboBox" VerticalAlignment="Center" FontSize="14" Width="190" Height="40" HorizontalAlignment="Right" SelectionChanged="PlaceStreetAreaComboBox_SelectionChanged"/>
                        </Border>
                    </Grid>

                    <Grid Grid.Row="2" Name="PlaceRow2">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Label Name="PlaceAreaLabel" Content="Gebied: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                        <Border Name="PlaceAreaBorder" Grid.Column="1" BorderBrush="White" Height="40" Width="190" HorizontalAlignment="Right">
                            <ComboBox Name="PlaceAreaComboBox" VerticalAlignment="Center" FontSize="14" Width="190" Height="40" HorizontalAlignment="Right" SelectionChanged="PlaceStreetAreaComboBox_SelectionChanged"/>
                        </Border>
                    </Grid>

                    <!-- Checkbox for power -->
                    <Grid Grid.Row="3" Name="PlaceRow3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="PlaceHasPowerLabel" Content="Stroom:" Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="1" Height="40" Width="125" HorizontalAlignment="Right" Name="PlacePowerComboBox" SelectionChanged="HandleExtendChange_Click">
                            <ComboBoxItem Tag="Street">Overerven straat</ComboBoxItem>
                            <ComboBoxItem Tag="Area">Overerven gebied</ComboBoxItem>
                            <ComboBoxItem Tag="Own" IsSelected="True">Eigen invoer</ComboBoxItem>
                        </ComboBox>
                        <CheckBox IsThreeState="False" Name="PlaceHasPower" Margin="32, 0, 0, 0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="2">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="2" ScaleY="2" />
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                    </Grid>
                    <!-- Checkbox for dogs -->
                    <Grid Grid.Row="4" Name="PlaceRow4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="PlaceHasDogsLabel" Content="Honden: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="1" Height="40" Width="125" HorizontalAlignment="Right" Name="PlaceDogsComboBox" SelectionChanged="HandleExtendChange_Click">
                            <ComboBoxItem Tag="Street">Overerven straat</ComboBoxItem>
                            <ComboBoxItem Tag="Area">Overerven gebied</ComboBoxItem>
                            <ComboBoxItem Tag="Own" IsSelected="True">Eigen invoer</ComboBoxItem>
                        </ComboBox>
                        <CheckBox IsThreeState="False" Name="PlaceHasDogs" Margin="29, 0, 0, 0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="2">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="2" ScaleY="2" />
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                    </Grid>
                    <!-- Checkbox for surface area -->
                    <Grid Grid.Row="5" Name="PlaceRow5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="PlaceSurfaceAreaLabel" Content="Oppervlakte: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="1" Height="40" Width="125" HorizontalAlignment="Right" Name="PlaceSurfaceAreaComboBox" SelectionChanged="HandleExtendChange_Click">
                            <ComboBoxItem Tag="Street">Overerven straat</ComboBoxItem>
                            <ComboBoxItem Tag="Area">Overerven gebied</ComboBoxItem>
                            <ComboBoxItem Tag="Own" IsSelected="True">Eigen invoer</ComboBoxItem>
                        </ComboBox>
                        <TextBox TextChanged="TextBox_Changed" Margin="10, 0, 0, 0" Name="PlaceSurfaceArea" VerticalAlignment="Center" FontSize="14" Width="50" Height="40" BorderBrush="Transparent" HorizontalAlignment="Right" Grid.Column="2">
                        </TextBox>
                    </Grid>

                    <!-- Checkbox for surface area -->
                    <Grid Grid.Row="6" Name="PlaceRow6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="PlacePricePerNightLabel" Content="Prijs p/nacht: "  Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="1" Height="40" Width="125" HorizontalAlignment="Right" Name="PlacePricePerNightPerPersonComboBox" SelectionChanged="HandleExtendChange_Click">
                            <ComboBoxItem Tag="Street">Overerven straat</ComboBoxItem>
                            <ComboBoxItem Tag="Area">Overerven gebied</ComboBoxItem>
                            <ComboBoxItem Tag="Own" IsSelected="True">Eigen invoer</ComboBoxItem>
                        </ComboBox>
                        <TextBox Name="PlacePricePerNight" Margin="10, 0, 0, 0" VerticalAlignment="Center" FontSize="14" Width="50" Height="40" BorderBrush="Transparent" HorizontalAlignment="Right" Grid.Column="2" TextChanged="TextBox_Changed">
                        </TextBox>
                    </Grid>

                    <!-- Checkbox for surface area -->
                    <Grid Grid.Row="7" Name="PlaceRow7">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="PlacePersonsLabel" Content="Personen aantal: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <ComboBox Grid.Column="1" Height="40" Width="125" HorizontalAlignment="Right" Name="PlacePersonsComboBox" SelectionChanged="HandleExtendChange_Click">
                            <ComboBoxItem Tag="Street">Overerven straat</ComboBoxItem>
                            <ComboBoxItem Tag="Area">Overerven gebied</ComboBoxItem>
                            <ComboBoxItem Tag="Own" IsSelected="True">Eigen invoer</ComboBoxItem>
                        </ComboBox>
                        <TextBox Name="PlacePersons" Margin="10, 0, 0, 0" VerticalAlignment="Center" FontSize="14" Width="50" Height="40" BorderBrush="Transparent" HorizontalAlignment="Right" Grid.Column="2" TextChanged="TextBox_Changed">
                        </TextBox>
                    </Grid>
                    <Grid Grid.Row="8" IsEnabled="True" VerticalAlignment="Bottom">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Foreground="White" FontWeight="Bold" Style="{DynamicResource ButtonStyle1Apply}" Name="AddPlaceButton" Content="Aanpassen" Click="HandleAddPlace_Click" Height="40" Width="140" HorizontalAlignment="Left"/>
                        <Button Foreground="White" FontWeight="Bold" Style="{DynamicResource ButtonStyle1Cancel}" Name="CancelAddPlaceButton" Content="Annuleren" Click="HandleCancelAddPlace_Click" Height="40" Width="140" HorizontalAlignment="Right"/>
                    </Grid>
                </Grid>
            </Border>

            <!-- Street info  -->
            <Border Visibility="Hidden" Grid.Column="0" Margin="25" Padding="15" Background="#334A6E" CornerRadius="25" Name="StreetInfo">
                <Grid Name="StreetInfoGrid">
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>

                    <Grid Grid.Row="0" Name="StreetRow1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="StreetNameLabel" Content="Straatnaam: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBox TextChanged="TextBox_Changed" Margin="10, 0, 0, 0" Name="StreetName" VerticalAlignment="Center" FontSize="14" Width="175" Height="40" BorderBrush="Transparent" HorizontalAlignment="Right" Grid.Column="1"/>
                    </Grid>

                    <!-- Checkbox for power -->
                    <Grid Grid.Row="1" Name="StreetRow3">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="StreetHasPowerLabel" Content="Stroom:" Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <CheckBox Name="StreetHasPower" Margin="32, 0, 0, 0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="2" ScaleY="2" />
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                    </Grid>
                    <!-- Checkbox for dogs -->
                    <Grid Grid.Row="2" Name="StreetRow4">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="StreetHasDogsLabel" Content="Honden: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <CheckBox Name="StreetHasDogs" Margin="29, 0, 0, 0" VerticalAlignment="Center" HorizontalAlignment="Right" Grid.Column="1">
                            <CheckBox.LayoutTransform>
                                <ScaleTransform ScaleX="2" ScaleY="2" />
                            </CheckBox.LayoutTransform>
                        </CheckBox>
                    </Grid>
                    <!-- Checkbox for surface area -->
                    <Grid Grid.Row="3" Name="StreetRow5">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="StreetSurfaceAreaLabel" Content="Oppervlakte: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBox TextChanged="TextBox_Changed" Margin="10, 0, 0, 0" Name="StreetSurfaceArea" VerticalAlignment="Center" FontSize="14" Width="175" Height="40" BorderBrush="Transparent" HorizontalAlignment="Right" Grid.Column="1">
                        </TextBox>
                    </Grid>

                    <!-- Checkbox for surface area -->
                    <Grid Grid.Row="4" Name="StreetRow6">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="StreetPricePerNightLabel" Content="Prijs p/nacht p/persoon: "  Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBox Name="StreetPricePerNight" Margin="10, 0, 0, 0" VerticalAlignment="Center" FontSize="14" Width="175" Height="40" BorderBrush="Transparent" HorizontalAlignment="Right" Grid.Column="1" TextChanged="TextBox_Changed">
                        </TextBox>
                    </Grid>

                    <!-- Checkbox for surface area -->
                    <Grid Grid.Row="5" Name="StreetRow7">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Name="StreetPersonsLabel" Content="Personen aantal: " Foreground="White" FontSize="14" HorizontalAlignment="Left" VerticalAlignment="Center"/>
                        <TextBox Name="StreetPersons" Margin="10, 0, 0, 0" VerticalAlignment="Center" FontSize="14" Width="175" Height="40" BorderBrush="Transparent" HorizontalAlignment="Right" Grid.Column="1" TextChanged="TextBox_Changed">
                        </TextBox>
                    </Grid>
                    <Grid Grid.Row="8" IsEnabled="True" VerticalAlignment="Bottom" Name="StreetRow8">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Foreground="White" FontWeight="Bold" Style="{DynamicResource ButtonStyle1Apply}" Name="AddStreetButton" Content="Toevoegen" Click="HandleAddStreet_Click" Height="40" Width="140" HorizontalAlignment="Left"/>
                        <Button Foreground="White" FontWeight="Bold" Style="{DynamicResource ButtonStyle1Cancel}" Name="CancelAddStreetButton" Content="Annuleren" Click="HandleCancelAddPlace_Click" Height="40" Width="140" HorizontalAlignment="Right"/>
                    </Grid>
                </Grid>
            </Border>


            <!-- Content in the second column -->
            <Border Grid.Column="1" Margin="25" Padding="0" Background="#334A6E" CornerRadius="25" Name="FieldBorder">

                <Border
                    BorderThickness="2"
                    BorderBrush="Black"
                    Background="LightGray"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center">
                    <Canvas ClipToBounds="true" Background="white" Width="1000" Height="750" x:Name="field" MouseDown="field_MouseDown">
                        <Canvas.LayoutTransform>
                            <ScaleTransform x:Name="plattegrond" />
                        </Canvas.LayoutTransform>
                    </Canvas>
                </Border>

            </Border>
        </Grid>
    </Grid>
</Page>
