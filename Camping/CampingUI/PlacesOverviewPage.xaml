<Page x:Class="CampingUI.PlacesOverviewPage"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:CampingUI"
        mc:Ignorable="d"
        Title="PlacesOverviewPage">
    <Page.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#529341"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#3d6d30"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#437835"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1Apply" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual1">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background1" Color="#C00C00"/>
        <SolidColorBrush x:Key="Button.Static.Border1" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background1" Color="#970900"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border1" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background1" Color="#A60A00"/>
        <SolidColorBrush x:Key="Button.Pressed.Border1" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background1" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border1" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground1" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1Cancel" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual1}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background1}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border1}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="8" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border1}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background1}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border1}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground1}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual2">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background2" Color="#FBA70E"/>
        <SolidColorBrush x:Key="Button.Static.Border2" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background2" Color="#E3970C"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border2" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background2" Color="#DC920C"/>
        <SolidColorBrush x:Key="Button.Pressed.Border2" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background2" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border2" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground2" Color="#FF838383"/>
        <Style x:Key="ButtonStyle1Edit" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual2}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background2}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border2}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" CornerRadius="8" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border2}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background2}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border2}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground2}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Page.Resources>
    <!--Grid for leftside bar and the place overview-->
        <Grid Name ="OverviewGrid">
            <Grid.RowDefinitions>
                <!-- First row with a fixed height of 70 -->
                <RowDefinition Height="60"/>
                <RowDefinition Height="100"/>
                <!-- Second row takes up the rest of the height -->
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Resources>
                <Style TargetType="Label">
                    <Setter Property="Foreground" Value="White"/>
                </Style>
                <Style TargetType="RadioButton">
                    <Setter Property="Foreground" Value="White"/>
                </Style>
                <Style TargetType="CheckBox">
                    <Setter Property="Foreground" Value="White"/>
                </Style>
            </Grid.Resources>
            <Border Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Margin="25,25,25,0" Background="#11284D" Grid.RowSpan="2">
                <TextBlock FontSize="25" FontWeight="Bold" Foreground="white" Text="Plaatsen"></TextBlock>
            </Border>
            <Border Grid.Column="1" Grid.Row="1" Margin="25,25,25,0" Padding="5" Background="#334A6E" CornerRadius="25">
                <Grid x:Name="FilterPlacesGrid">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="1.5*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Aankomstdatum -->
                    <StackPanel Grid.Column="0" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Label FontSize="14" Content="Aankomstdatum: " HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="Calibri" FontWeight="Bold"/>
                        <DatePicker HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="White" Height="30" Name="ArrivalDatePicker" Tag="-2" SelectedDateChanged="DatePicker_SelectedDateChanged"/>
                    </StackPanel>

                    <!-- Vertrekdatum -->
                    <StackPanel Grid.Column="1" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Label FontSize="14" Content="Vertrekdatum: " HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Calibri" FontWeight="Bold"/>
                        <DatePicker HorizontalContentAlignment="Center" VerticalContentAlignment="Center" Background="White" Height="30" Name="DepartureDatePicker" Tag="-1" SelectedDateChanged="DatePicker_SelectedDateChanged" />
                    </StackPanel>

                    <StackPanel Grid.Column="2" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <!-- Geen voorkeur (Stroom) -->
                        <Label FontSize="14" Content="Heeft stroom: " HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Calibri" FontWeight="Bold"/>
                    <CheckBox FontSize="14" Height="30" VerticalContentAlignment="Center" Name="PowerCheckBoxFilter" Content="Geen voorkeur (stroom)" IsChecked="{x:Null}" IsThreeState="true" HorizontalAlignment="Center" VerticalAlignment="Center" Click="PowerCheckBox_Checked" FontFamily="Calibri" FontWeight="Bold"/>
                    </StackPanel>

                    <StackPanel Grid.Column="3" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <!-- Geen voorkeur (Honden) -->
                        <Label FontSize="14" Content="Honden toegestaan: " HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Calibri" FontWeight="Bold"/>
                    <CheckBox FontSize="14" Height="30" VerticalContentAlignment="Center" Name="DogCheckBoxFilter" Content="Geen voorkeur (hond)"  IsChecked="{x:Null}" IsThreeState="true" HorizontalAlignment="Center" VerticalAlignment="Center" Click="DogsCheckBox_Checked" FontFamily="Calibri" FontWeight="Bold"/>
                    </StackPanel>
                    <!-- Aantal personen -->
                    <StackPanel Grid.Column="4" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Label FontSize="14" Content="Aantal personen: " HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Calibri" FontWeight="Bold"/>
                        <TextBox HorizontalContentAlignment="Center" VerticalContentAlignment="Center" x:Name="AmountOfPeopleTextBox" MinWidth="75" Height="30" TextChanged="TextBox_Changed" KeyDown="TextBox_PressedEnter"/>
                    </StackPanel>

                    <!-- Max prijs -->
                    <StackPanel Grid.Column="5" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Label FontSize="14" Content="Max prijs: " HorizontalAlignment="Center" VerticalAlignment="Center" FontFamily="Calibri" FontWeight="Bold"/>
                        <TextBox HorizontalContentAlignment="Center" VerticalContentAlignment="Center" x:Name="MaxPriceRangeTextBox" MinWidth="75" Height="30" TextChanged="TextBox_Changed" KeyDown="TextBox_PressedEnter"/>
                    </StackPanel>

                    <!-- Buttons to apply or remove filters -->
                    <StackPanel Grid.Column="6" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Center">
                        <Button Style="{DynamicResource ButtonStyle1Cancel}" Foreground="White" FontWeight="Bold" Margin="5,0,0,0" Content="Filters verwijderen" Click="RemoveFilters_Click" Padding="7, 0, 7, 0" Height="40" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                    </StackPanel>
                </Grid>
            </Border>
            <Grid Grid.Row="2">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="3*" MinWidth="0"/>
                    <ColumnDefinition Width="7*" MinWidth="0"/>
                </Grid.ColumnDefinitions>
                <!-- Content in the first row -->
                <!--<Border Grid.Column="1" Grid.Row="0" Margin="25,25,25,0" Background="#11284D" Grid.RowSpan="2"/>-->
                <Border Grid.Column="0" Margin="25,25,25,25" Padding="15" Background="#334A6E" CornerRadius="25">
                    <!--Grid for the filters and list of places-->
                    <Grid Name="ListGrid" Grid.Row="1">
                        <Grid.Resources>
                            <Style TargetType="ListViewItem">
                                <Style.Triggers>
                                    <Trigger Property="ItemsControl.AlternationIndex"  Value="0">
                                        <Setter Property="Background" Value="#667CA0" />
                                    </Trigger>
                                </Style.Triggers>
                                <Setter Property="Foreground" Value="White"/>
                                <Setter Property="FontSize" Value="16"/>
                                <Setter Property="Height" Value="30"/>
                                <Setter Property="Padding" Value="5"/>
                            </Style>
                        </Grid.Resources>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <!-- Adjust as needed -->
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                            <!--<RowDefinition Height="Auto"/>-->
                            <!-- Adjust as needed -->
                        </Grid.RowDefinitions>
                        <!-- Show the places from the camping in a list in a grid view and sort them.  -->

                        <ListView Background="Transparent" Grid.Row="1" Name="PlacesListView" SelectionChanged="PlacesListView_SelectionChanged" Margin="0" BorderThickness="0">
                            <ListView.Resources>
                                <Style TargetType="GridViewColumnHeader">
                                    <Setter Property="Background" Value="#667CA0"/>
                                    <Setter Property="BorderBrush" Value="Transparent"/>
                                    <Setter Property="BorderThickness" Value="0"/>
                                    <Setter Property="Height" Value="30"/>
                                </Style>
                            </ListView.Resources>
                            <ListView.View>
                                <GridView AllowsColumnReorder="False">
                                    <GridViewColumn DisplayMemberBinding="{Binding PlaceID}" Width="100">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Foreground="White" FontSize="14" Tag="PlaceID" Click="SetSorterColumn_Click">Plaatsnummer</GridViewColumnHeader>
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn DisplayMemberBinding="{Binding PricePerNightPerPerson}" Width="60">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Foreground="White" FontSize="14" Tag="Price" Click="SetSorterColumn_Click">Prijs</GridViewColumnHeader>
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                    <GridViewColumn DisplayMemberBinding="{Binding AmountOfPeople}" Width="130">
                                        <GridViewColumn.Header>
                                            <GridViewColumnHeader Foreground="White" FontSize="14" Tag="AmountOfPeople" Click="SetSorterColumn_Click">Aantal personen</GridViewColumnHeader>
                                        </GridViewColumn.Header>
                                    </GridViewColumn>
                                </GridView>
                            </ListView.View>
                        </ListView>


                        <!--Button to add place-->
                        <!--<Button Grid.Row="2" Content="Nieuwe plaats toevoegen" Click="AddPlaceButton_Click" Height="Auto"/>-->
                    </Grid>
                </Border>
                <Border Grid.Column="1" Margin="25,25,25,25" Padding="15" Background="#334A6E" CornerRadius="25">
                    <!--Grid for the overview of the selected place-->
                    <Grid Grid.Column="2" Name="PlaceOverviewGrid" Visibility="Collapsed" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4*"/>
                            <RowDefinition Height="3*"/>
                        </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="1.5*"/>
                        <ColumnDefinition Width="3*"/>
                    </Grid.ColumnDefinitions>


                    <Grid Grid.Row="0" Grid.Column="1">
                        <Canvas Background="white" Width="500" Height="375" x:Name="field" >
                            <Canvas.LayoutTransform>
                                <ScaleTransform x:Name="plattegrond" />
                            </Canvas.LayoutTransform>
                        </Canvas>
                    </Grid>
                        <!--Grid for place info-->
                        <Grid Grid.Row="0" Name="UpperGrid">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="4*"/>
                                <ColumnDefinition Width="2*"/>
                            </Grid.ColumnDefinitions>
                            <Grid Grid.Column="0" Name="InfoGrid">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                    <RowDefinition Height="1*"/>
                                </Grid.RowDefinitions>
                                <Label Grid.Row="0" Margin="0,0,0,0" Name="nrLabel" FontSize="25" FontWeight="Bold" Content=""></Label>
                                <Label Grid.Row="1" Margin="0,0,0,0" Name="areaLabel" FontSize="16" Content=""></Label>
                                <Label Grid.Row="2" Margin="0,0,0,0" Name="amountOfPeopleLabel" FontSize="16" Content=""></Label>
                                <Label Grid.Row="3" Margin="0,0,0,0" Name="powerLabel" FontSize="16" Content=""></Label>
                                <Label Grid.Row="4" Margin="0,0,0,0" Name="dogsLabel" FontSize="16" Content=""></Label>
                                <Label Grid.Row="5" Margin="0,0,0,0" Name="priceLabel" FontSize="16" Content=""></Label>
                          
                        </Grid>
     
                        </Grid>
                         <Grid Grid.Row="1" Grid.Column="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="1*"/>
                        </Grid.ColumnDefinitions>
                        <Viewbox HorizontalAlignment="Left" Margin="0,0,0,0" >
                            <Calendar x:Name="ReservationCalender" Height="auto" Width="auto" Visibility="Visible"/>
                        </Viewbox>
                         </Grid>
                        <!--Grid for button -->
                        <Grid Grid.Row="2" Grid.Column="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="1*"/>
                            </Grid.ColumnDefinitions>

                        <Button Style="{DynamicResource ButtonStyle1Apply}" HorizontalAlignment="Right" VerticalAlignment="Bottom" Foreground="White" FontWeight="Bold" Grid.Column="5" Name="NewReservationButton" Content="Nieuwe resevering maken" Margin="20" Height="50" Width="200" Click="NewReservation_Click"/>
                            <!--<Button Style="{DynamicResource ButtonStyle1Edit}" Foreground="White" FontWeight="Bold" Grid.Column="1" Name="EditPlaceButton" Content="Plaats aanpassen" Margin="20" Height="50" Width="200" Click="EditPlaceButton_Click"/>-->
                            <Button Style="{DynamicResource ButtonStyle1Cancel}" Foreground="White" FontWeight="Bold" Grid.Column="2" Name="DeletePlaceButton" Content="Verwijder plaats" Margin="20" Height="50" Width="200" Click="DeletePlaceButton_Click"/>
                        </Grid>
                    </Grid>
                </Border>
                <Grid Grid.Column="1" Name="EditPlaceGrid" Visibility="Collapsed" Grid.Row="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="4*"/>
                        <RowDefinition Height="1*"/>
                    </Grid.RowDefinitions>
                    <Label Content="" HorizontalAlignment="Center" FontSize="30" FontWeight="Bold" Name="PlaceIDLabelEdit" Margin="0,30,0,0"/>
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <!--Power, Dog, Price, Person, SurfaceArea-->

                        <!--<Label Grid.Column="0" Grid.Row="0" FontSize="16" HorizontalAlignment="Left" Margin="170,76,0,0" VerticalAlignment="Top" Name="PowerEditLabel"/>-->
                        <CheckBox Name="PowerEditCheckBox" Grid.Column="0" Grid.Row="0" IsThreeState="True" HorizontalAlignment="Left" Margin="150,65,0,0" Height="15" Click="PowerEditCheckBox_Click"/>

                        <!--<Label Grid.Column="1" Grid.Row="0" FontSize="16" HorizontalAlignment="Left" Margin="140,76,0,0" VerticalAlignment="Top" Name="DogsAllowedEditLabel"/>-->
                        <CheckBox Name="DogsEditCheckBox" Grid.Column="1" Grid.Row="0" IsThreeState="True" HorizontalAlignment="Left" Margin="120,65,0,0" Height="15" Click="DogsEditCheckBox_Click"/>

                        <Label Grid.Column="0" Grid.Row="1" FontSize="16" Content="Aantal personen" Width="150" />
                        <TextBox Grid.Column="0" Grid.Row="1" FontSize="16" Height="30" Width="150" x:Name="AmountOfPeopleEditTextBox" TextChanged="TextBox_Changed"/>
                        <Button Style="{DynamicResource ButtonStyle1Edit}" Foreground="White" FontWeight="Bold" Content="Overerven" FontSize="14" Name="AmountOfPeopleExtendButton" Click="EditExtendButton_Click" Grid.Column="0" Grid.Row="1" Height="30" Width="80" HorizontalAlignment="Left" Margin="60,0,0,0"/>

                        <Label Grid.Column="1" Grid.Row="1" FontSize="16" Content="Oppervlakte" Width="150" />
                        <TextBox Grid.Column="1" Grid.Row="1" FontSize="16" Height="30" Width="150" x:Name="SurfaceAreaEditTextBox" TextChanged="TextBox_Changed"/>
                        <Button Style="{DynamicResource ButtonStyle1Edit}" Foreground="White" FontWeight="Bold" Content="Overerven" FontSize="14" Name="SurfaceAreaExtendButton" Click="EditExtendButton_Click" Grid.Column="1" Grid.Row="1" Height="30" Width="80" HorizontalAlignment="Left" Margin="60,0,0,0"/>

                        <Label Grid.Column="0" Grid.Row="2" FontSize="16" Content="Prijs per nacht per persoon" HorizontalContentAlignment="Center"/>
                        <TextBox Grid.Column="0" Grid.Row="2" FontSize="16" Height="30" Width="150" x:Name="PricePerNightPerPersonEditTextBox" TextChanged="TextBox_Changed" HorizontalAlignment="Center"/>
                        <Button Style="{DynamicResource ButtonStyle1Edit}" Foreground="White" FontWeight="Bold" Padding="5,0,5,0" Content="Overerven" FontSize="14" Name="PricePerNightPerPersonExtendButton" Click="EditExtendButton_Click" Grid.Column="0" Grid.Row="2" Height="30" Width="80" HorizontalAlignment="Left" Margin="60,0,0,0"/>
                    </Grid>
                    <Grid Grid.Row="1">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>
                        <Button Style="{DynamicResource ButtonStyle1Apply}" Foreground="White" FontWeight="Bold" Name="ConfirmEditButton" Content="Bevestigen" Grid.Column="0" Height="35" Width="180" Click="EditPlaceConfirmButton_Click"/>
                        <Button Style="{DynamicResource ButtonStyle1Cancel}" Foreground="White" FontWeight="Bold" Name="CancelEditButton" Content="Annuleren" Grid.Column="2" Height="35" Width="180" Click="CancelEditButton_Click"/>
                        <TextBlock Grid.Row="13" Grid.Column="1" HorizontalAlignment="Center" x:Name="AddPlaceMessage"/>
                    </Grid>
                </Grid>
            </Grid>
        </Grid>
</Page>
